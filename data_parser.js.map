{"version":3,"file":"data_parser.js","sourceRoot":"","sources":["src/data_parser.ts"],"names":[],"mappings":"AAKA,KAAK,UAAU,QAAQ;IACnB,IAAI,CAAC;QACD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACnD,CAAC;QACD,MAAM,IAAI,GAAa,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC7C,OAAO,IAAI,CAAC;IAChB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC;AAED,OAAO,EAAE,QAAQ,EAAE,CAAC","sourcesContent":["interface SiteData {\n    main_page: {\n        top_text: string ;\n    }\n}\nasync function readData(): Promise<SiteData | null> {\n    try {\n        const response = await fetch('./data.json');\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const data: SiteData = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Failed to fetch data:', error);\n        return null;\n    }\n}\nexport default SiteData;\nexport { readData };"]}