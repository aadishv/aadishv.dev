---
import Layout from "../layouts/Layout.astro";
import "@/styles/globals.css";
import { Button } from "@/components/ui/button";
import EntryList from "@/components/EntryList";

// getSlugFromPath needs to be defined at the top level if used by clientEntries mapping
// or ensure it's correctly scoped if only used in the template section further down.
// For clientEntries, it needs to be available here.
const getSlugFromPath = (path: string): string => {
  // Adjusted to be robust against paths not containing "/" or being undefined
  const parts = path.split("/");
  const filename = parts.pop() || ""; // Get last part or empty string
  return filename.replace(".md", "");
};

let allEntries = await Astro.glob("../content/posts/*.md"); // Default: just posts
if (import.meta.env.DEV) {
  const personal = await Astro.glob("../content/personal/*.md");
  allEntries = allEntries.concat(personal); // Concatenate, do not deduplicate
}

const sortedEntries = allEntries
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf(),
  )
  .filter((p) => p.frontmatter.hidden !== true);

const clientEntries = sortedEntries.map((entry) => ({
  slug: getSlugFromPath(entry.file), // Ensure getSlugFromPath is correctly defined and scoped
  title: entry.frontmatter.title,
  date: entry.frontmatter.date,
  description: entry.frontmatter.description || "",
  categories: entry.frontmatter.categories || [],
  rawContent: entry.rawContent(), // This is a function call
}));
---

<Layout title="Aadish Verma" hideName={true}>
  <main class="container mx-auto py-10 lg:px-52">
    <Button variant="ghost" className="-ml-4 mb-3 pb-3 duration-0">
      <h1><a href="/" class="">Aadish Verma</a></h1>
    </Button>
    <br />
    <span>
      <p>
        Student at Stanford Online High School, passionate about really anything
        [but especially STEM]. A few notable things I've done:
      </p>

      <ul>
        <li>
          <em>Hackathons.</em>
          Won the OHS 2024 Labor Day Hackathon. Planning to a blog post about it
          later :) [<a href="https://github.com/aadishv/doleofdoves">code</a>]
        </li>

        <li>
          <em>Competitive programming.</em>
          <a href="https://adventofcode.com/2024">Advent of Code</a> 2024 participant.
          [<a href="https://github.com/aadishv/aoc">code</a>] <a href="https://usaco.org">USACO</a> Silver competitor.
          [<a href="https://github.com/aadishv/usaco">code</a>]
        </li>

        <li>
          <em>Robotics.</em>
          Lead coder for VEX V5 Robotics Competition team <a
            href="https://www.robotevents.com/teams/V5RC/315P">315P</a
          > for Over Under and part of the High Stakes seasons. I have made a <a
            href="https://github.com/aadishv/highstakes">public mirror</a
          > of my High Stakes code available.
          <p>
          Lead AI programmer for VEX AI Robotics Competition team 3151A for the High Stakes and Push Back seasons (up until the present). Led work on system design, involving a raining & running a custom computer vision model. In total, designed and wrote over 8,000 lines of C++, Python, TypeScript, and shell.
          </p>
          <p>
          Today, I am exploring future-learning work for the team and pushing the state of the art in VEX, including
          <ul class="pb-1 -mt-2">
              <li style="line-height: 0.8rem;">GPU-accelerated Monte Carlo localization with a LiDAR,</li>
              <li style="line-height: 0.8rem;">clustering and object persistence using Kalman filters,</li>
              <li style="line-height: 0.8rem;">and much more.</li>
          </ul>
          Unfortunately, our code is our secret sauce, so I can't share it :)
          </p>
        </li>

        <li>
          <em>Open source.</em>
          In conjunction with my work in the VEX community, I've also worked on several open-source projects used by hundreds of robotics teams (VEX and professional):
          <p>
          A <a href="https://github.com/LemLib/LemLib/pull/274">bugfix PR to LemLib,</a> the most popular motion control and utilities library in the VEX V5 Robotics Competition. This PR is currently in review and fixes a critical bug in the library that would cause it to block indefinitely if motions were called under certain competition conditions.
          </p>
          <p>
          A <a href="https://github.com/Slamtec/rplidar_sdk/pull/141">bugfix PR to the RPLiDAR C++ SDK.</a> RPLiDAR is a very commonly used LiDAR series made by the Slamtec manufacturer, used in R&D, production cases, and also by the most technologically advanced VEX Robotics teams. This PR fixes a critical segfault in the SDK occuring due to a loop not checking for when a queue was empty.
          </p>
          <p>

          </p>
        </li>
        <li>
          <em>Frontend development.</em>
          I use React and TailwindCSS with TypeScript to write web applications. I have used these technologies for several applications spanning several use cases.
          <p>
          Built <a href="https://chromewebstore.google.com/detail/ohs-ac-utilities/mcnjeemajaoopeejjbfiieaepibmbjne">a Chrome extension</a>
          that allows OHS students to easily download Adobe Connect recordings. I am also currently working on adding AI summaries and chat features to improve students' experience when viewing class recordings.
          [<a href="https://github.com/aadishv/ohs-ac-utils/">code</a>]
          </p>
          <p>I've built <a href="/tools">several tools</a> and games as part of my <a href="https://aadishv.github.io/">website</a>. In total, my website has over 10,000 lines of TypeScript code.</p>
        </li>
      </ul>

      <p>
        Contact me!
        <br /><a href="mailto:aadish@ohs.stanford.edu">email</a>
        <br /><a href="https://github.com/aadishv" target="_blank">github</a>
      </p>

      <p>
        {"If I've built something else, you might find it"}
        <a href="/tools">here</a>
        {"or in my blog/projects â†“"}
      </p>
    </span>

    <!-- divider -->
    <hr class="my-4" />

    <EntryList entries={clientEntries} client:load />
  </main>
</Layout>
